#///////////////////////////////////////////////////////////////////////////////
#  Copyright (c) 2010, Michael A. Jackson. BlueQuartz Software
#  All rights reserved.
#  BSD License: http://www.opensource.org/licenses/bsd-license.html
#///////////////////////////////////////////////////////////////////////////////
PROJECT( IPHelperApp )
cmake_minimum_required(VERSION 2.6)

# ---------- Setup output Directories -------------------------
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )


# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

# Set some include directories
include_directories( ${IPHelper_CODE_DIR} )
include_directories( ${IPHelper_CODE_DIR}/QtSupport )

include_directories( ${IPHelperApp_BINARY_DIR} )
include_directories( ${IPHelper_BINARY_DIR}/MXA)
include_directories( ${IPHelper_BINARY_DIR}/QtSupport )

#-- Get the current set of source files
SET( IPHelperApp_SRCS
    ${IPHelperApp_SOURCE_DIR}/main.cpp
    ${IPHelperApp_SOURCE_DIR}/IPHelperApp.cpp
)

SET (IPHelperApp_HDRS
    ${IPHelperApp_SOURCE_DIR}/IPHelperApp.h
)
IDE_SOURCE_PROPERTIES( "IPHelperApp/GUI" "${IPHelperApp_HDRS}" "${IPHelperApp_SRCS}")

# --------------------------------------------------------------------
#  Get a list of the header to run 'moc' on 
# --------------------------------------------------------------------                   
SET( IPHelperApp_MOC_HDRS
    ${IPHelperApp_HDRS}
)

# --------------------------------------------------------------------
# The UI files As generated by Qt Designer
# --------------------------------------------------------------------
SET( IPHelperApp_UIS
  ${IPHelperApp_SOURCE_DIR}/UI_Files/IPHelperApp.ui
)

SET( IPHelperApp_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# --------------------------------------------------------------------
# Run MOC on the files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${IPHelperApp_RCS} )

# --------------------------------------------------------------------
# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${IPHelperApp_UIS} )

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${IPHelperApp_MOC_HDRS} )

# --------------------------------------------------------------------
#-- Put the generated files into their own group for IDEs
IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}")

# --------------------------------------------------------------------
# -- Finally set the Project Sources to include all the sources
SET (IPHelperApp_PROJECT_SRCS 
    ${IPHelperApp_SRCS}
    ${IPHelperApp_HDRS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)

# Find all the Qt Plugins after which we should have some more variables to our disposal
FindQtPlugins("qgif;qjpeg;qtiff")
# Add to the list of plugins to install and directories to look for libraries - this
# is mainly for OS X install rules
file(APPEND ${IPHelper_BINARY_DIR}/plugins.txt "${QTPLUGINS}")
file(APPEND ${IPHelper_BINARY_DIR}/libsearchdirs.txt "${QT_PLUGINS_DIR}/imageformats;")

file(READ ${IPHelper_BINARY_DIR}/plugins.txt COMPLETE_PLUGIN_LIST)
file(READ ${IPHelper_BINARY_DIR}/libsearchdirs.txt PLUGIN_SEARCH_DIRS)

#-- Set up OS X Application Bundle properties
#-- This file have tools for OS X Bunlde creation and configuration
INCLUDE (${PROJECT_RESOURCES_DIR}/OSX_Tools/OSX_BundleTools.cmake)


IF(APPLE)
 SET(GUI_TYPE MACOSX_BUNDLE)
 ConfigureMacOSXBundlePlist(IPHelperApp ${EXE_DEBUG_EXTENSION} 
                            ${PROJECT_RESOURCES_DIR}/icons/icns/IPHelperApp.icns
                            ${IPHelper_VERSION} )
ENDIF (APPLE)

IF(Q_WS_WIN)
    include_directories(${PROJECT_RESOURCES_DIR}/icons/ico)
    configure_file(${PROJECT_RESOURCES_DIR}/icons/ico/IconResource.rc.in ${IPHelperApp_BINARY_DIR}/IPHelperApp.rc)
    SET (IPHelperApp_PROJECT_SRCS ${IPHelperApp_PROJECT_SRCS} ${IPHelperApp_BINARY_DIR}/IPHelperApp.rc) 
    IDE_SOURCE_PROPERTIES ("IPHelperApp/ConfiguredFiles" "${IPHelperApp_BINARY_DIR}/IPHelperApp.rc" "")
    IDE_SOURCE_PROPERTIES( "IPHelperApp/Configured" "${IPHelper_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Version.h;${IPHelper_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Configuration.h" "${IPHelper_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Types.h")                
ENDIF(Q_WS_WIN)

# ---------- Build the Viewer Application  ----------------------
ADD_EXECUTABLE( IPHelperApp ${GUI_TYPE} ${IPHelperApp_PROJECT_SRCS} )
TARGET_LINK_LIBRARIES( IPHelperApp
                        ${QT_LIBRARIES}
                        ${ITK_LIBRARIES}
                        AIMLib
                        QtSupport
                        MXADataModel)



InstallationSupport(IPHelperApp ${EXE_DEBUG_EXTENSION} ${IPHelperApp_BINARY_DIR})                
