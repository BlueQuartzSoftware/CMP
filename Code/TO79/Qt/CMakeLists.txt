#///////////////////////////////////////////////////////////////////////////////
#
#  Copyright (c) 2010, Michael A. Jackson. BlueQuartz Software
#  All rights reserved.
#  BSD License: http://www.opensource.org/licenses/bsd-license.html
#
#///////////////////////////////////////////////////////////////////////////////
PROJECT( TO79MainWindow )
cmake_minimum_required(VERSION 2.6)

# ---------- Setup output Directories -------------------------
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )

# --------------------------------------------------------------------
# Find the ITK Package
# --------------------------------------------------------------------
FIND_PACKAGE(ITK)
IF(ITK_FOUND)
  INCLUDE(${USE_ITK_FILE})
ELSE(ITK_FOUND)
  MESSAGE(FATAL_ERROR "Cannot build without ITK.  Please set ITK_DIR.")
ENDIF(ITK_FOUND)

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

# Set some include directories
include_directories( ${TO79_CODE_DIR} )
include_directories( ${TO79_CODE_DIR}/MXA/Qt )
include_directories( ${TO79MainWindow_BINARY_DIR} )

#-- Get the current set of source files
SET( TO79MainWindow_SRCS
    ${TO79MainWindow_SOURCE_DIR}/main.cpp
    ${TO79MainWindow_SOURCE_DIR}/TO79MainWindow.cpp
)

SET (TO79MainWindow_HDRS
    ${TO79MainWindow_SOURCE_DIR}/TO79MainWindow.h
)
IDE_SOURCE_PROPERTIES( "CrossCorrelation/GUI" "${TO79MainWindow_HDRS}" "${TO79MainWindow_SRCS}")

# --------------------------------------------------------------------
# include this so the source files can have moc and uic run on them
include(${TO79_CODE_DIR}/MXA/Qt/SourceList.cmake)

# --------------------------------------------------------------------
#  Get a list of the header to run 'moc' on 
# --------------------------------------------------------------------                   
SET( TO79MainWindow_MOC_HDRS
    ${TO79MainWindow_HDRS}
    ${MXA_QT_HDRS}
)

# --------------------------------------------------------------------
# The UI files As generated by Qt Designer
# --------------------------------------------------------------------
SET( TO79MainWindow_UIS
  ${TO79MainWindow_SOURCE_DIR}/UI_Files/TO79MainWindow.ui
  ${MXA_QT_UI_FILES}
)

# and finally any resource files
SET( TO79MainWindow_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# --------------------------------------------------------------------
# Run MOC on the files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${TO79MainWindow_RCS} )

# --------------------------------------------------------------------
# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${TO79MainWindow_UIS} )

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${TO79MainWindow_MOC_HDRS} )

# --------------------------------------------------------------------
#-- Put the generated files into their own group for IDEs
IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}")

include ( ${TO79_CODE_DIR}/AIM/Common/Common_SourceList.cmake)

# --------------------------------------------------------------------
# -- Finally set the Project Sources to include all the sources
SET (TO79MainWindow_PROJECT_SRCS 
    ${TO79MainWindow_SRCS}
    ${TO79MainWindow_HDRS}
    ${AIM_COMMON_HDRS}
    ${AIM_COMMON_SRCS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
    ${MXA_QT_HDRS}
    ${MXA_QT_SRCS}
)


#-- Set up OS X Application Bundle properties
#-- This file have tools for OS X Bunlde creation and configuration
INCLUDE (${PROJECT_RESOURCES_DIR}/OSX_Tools/OSX_BundleTools.cmake)

IF(APPLE)
 SET(GUI_TYPE MACOSX_BUNDLE)
 ConfigureMacOSXBundlePlist(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} 
                            ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns
                            ${TO79_VERSION} )
ENDIF (APPLE)

IF(Q_WS_WIN)
    include_directories(${PROJECT_RESOURCES_DIR}/icons/ico)
    configure_file(${PROJECT_RESOURCES_DIR}/icons/ico/IconResource.rc.in ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc)
    SET (${PROJECT_NAME}_PROJECT_SRCS ${${PROJECT_NAME}_PROJECT_SRCS} ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc) 
    IDE_SOURCE_PROPERTIES ("CrossCorrelation/ConfiguredFiles" "${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc" "")
    IDE_SOURCE_PROPERTIES( "CrossCorrelation/Configured" "${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Version.h;${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Configuration.h" "${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Types.h")                
ENDIF(Q_WS_WIN)

# ---------- Build the Viewer Application  ----------------------
ADD_EXECUTABLE( ${PROJECT_NAME} ${GUI_TYPE} ${TO79MainWindow_PROJECT_SRCS} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
                        ${QT_LIBRARIES}
                        ${ITK_LIBRARIES}
                        MXADataModel)
                        

#-- Add the Plugin to use the EM/MPM Algorithm        
set (EMMPMPlugin_SRCS ${TO79MainWindow_SOURCE_DIR}/plugins/EMMPMPlugin.cpp)
# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Plugin_Generated_MOC_SRCS ${TO79MainWindow_SOURCE_DIR}/plugins/EMMPMPlugin.h )
add_library(EMMPMPlugin MODULE ${EMMPMPlugin_SRCS} ${Plugin_Generated_MOC_SRCS})
target_link_libraries(EMMPMPlugin ${QT_LIBRARIES})


FindQtPlugins("qgif;qjpeg;qtiff")

InstallationSupport(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} ${TO79MainWindow_BINARY_DIR})                
