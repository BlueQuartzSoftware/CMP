#///////////////////////////////////////////////////////////////////////////////
#  Copyright (c) 2010, Michael A. Jackson. BlueQuartz Software
#  All rights reserved.
#  BSD License: http://www.opensource.org/licenses/bsd-license.html
#///////////////////////////////////////////////////////////////////////////////
PROJECT( TO79Application )
cmake_minimum_required(VERSION 2.6)

# ---------- Setup output Directories -------------------------
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )


# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

# Set some include directories
include_directories( ${TO79_CODE_DIR} )
#include_directories( ${TO79_CODE_DIR}/MXA)
include_directories( ${TO79_CODE_DIR}/QtSupport )
#include_directories( ${TO79_CODE_DIR}/AIM )

include_directories( ${TO79Application_BINARY_DIR} )
include_directories( ${TO79_BINARY_DIR}/MXA)
include_directories( ${TO79_BINARY_DIR}/QtSupport )

#-- Get the current set of source files
SET( TO79Application_SRCS
    ${TO79Application_SOURCE_DIR}/main.cpp
    ${TO79Application_SOURCE_DIR}/TO79Application.cpp
)

SET (TO79Application_HDRS
    ${TO79Application_SOURCE_DIR}/TO79Application.h
)
IDE_SOURCE_PROPERTIES( "TO79Application/GUI" "${TO79Application_HDRS}" "${TO79Application_SRCS}")

# --------------------------------------------------------------------
#  Get a list of the header to run 'moc' on 
# --------------------------------------------------------------------                   
SET( TO79Application_MOC_HDRS
    ${TO79Application_HDRS}
)

# --------------------------------------------------------------------
# The UI files As generated by Qt Designer
# --------------------------------------------------------------------
SET( TO79Application_UIS
  ${TO79Application_SOURCE_DIR}/UI_Files/TO79Application.ui
)

# and finally any resource files
SET( TO79Application_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# --------------------------------------------------------------------
# Run MOC on the files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${TO79Application_RCS} )

# --------------------------------------------------------------------
# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${TO79Application_UIS} )

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${TO79Application_MOC_HDRS} )

# --------------------------------------------------------------------
#-- Put the generated files into their own group for IDEs
IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}")

# --------------------------------------------------------------------
# -- Finally set the Project Sources to include all the sources
SET (TO79Application_PROJECT_SRCS 
    ${TO79Application_SRCS}
    ${TO79Application_HDRS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)


#-- Set up OS X Application Bundle properties
#-- This file have tools for OS X Bunlde creation and configuration
INCLUDE (${PROJECT_RESOURCES_DIR}/OSX_Tools/OSX_BundleTools.cmake)

IF(APPLE)
 SET(GUI_TYPE MACOSX_BUNDLE)
 ConfigureMacOSXBundlePlist(TO79Application ${EXE_DEBUG_EXTENSION} 
                            ${PROJECT_RESOURCES_DIR}/icons/icns/TO79Application.icns
                            ${TO79_VERSION} )
ENDIF (APPLE)

IF(Q_WS_WIN)
    include_directories(${PROJECT_RESOURCES_DIR}/icons/ico)
    configure_file(${PROJECT_RESOURCES_DIR}/icons/ico/IconResource.rc.in ${TO79Application_BINARY_DIR}/TO79Application.rc)
    SET (TO79Application_PROJECT_SRCS ${TO79Application_PROJECT_SRCS} ${TO79Application_BINARY_DIR}/TO79Application.rc) 
    IDE_SOURCE_PROPERTIES ("TO79Application/ConfiguredFiles" "${TO79Application_BINARY_DIR}/TO79Application.rc" "")
    IDE_SOURCE_PROPERTIES( "TO79Application/Configured" "${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Version.h;${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Configuration.h" "${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Types.h")                
ENDIF(Q_WS_WIN)

# ---------- Build the Viewer Application  ----------------------
ADD_EXECUTABLE( TO79Application ${GUI_TYPE} ${TO79Application_PROJECT_SRCS} )
TARGET_LINK_LIBRARIES( TO79Application
                        ${QT_LIBRARIES}
                        ${ITK_LIBRARIES}
                        AIMLib
                        QtSupport
                        MXADataModel)
                       
FindQtPlugins("qgif;qjpeg;qtiff")

InstallationSupport(TO79Application ${EXE_DEBUG_EXTENSION} ${TO79Application_BINARY_DIR})                
