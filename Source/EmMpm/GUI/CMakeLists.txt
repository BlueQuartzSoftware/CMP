#///////////////////////////////////////////////////////////////////////////////
#
#  Copyright (c) 2010, Michael A. Jackson. BlueQuartz Software
#  All rights reserved.
#  BSD License: http://www.opensource.org/licenses/bsd-license.html
#
#///////////////////////////////////////////////////////////////////////////////
# set project's name
PROJECT( QEmMpm )
cmake_minimum_required(VERSION 2.6)


# ---------- Setup output Directories -------------------------
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )

include ( ${PROJECT_RESOURCES_DIR}/CMake/CMakeMacros.cmake)

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)


# List the source files here
SET (QEmMpm_SRCS
    ${QEmMpm_SOURCE_DIR}/main.cpp
    ${QEmMpm_SOURCE_DIR}/QEmMpm.cpp
    ${QEmMpm_SOURCE_DIR}/EmMpmTask.cpp
    ${QEmMpm_SOURCE_DIR}/EmMpmThread.cpp
)

SET (QEmMpm_HDRS
    ${QEmMpm_SOURCE_DIR}/QEmMpm.h
    ${QEmMpm_SOURCE_DIR}/EmMpmTask.h
    ${QEmMpm_SOURCE_DIR}/EmMpmThread.h
)
IDE_SOURCE_PROPERTIES( "EmMpm/GUI" "${QEmMpm_HDRS}" "${QEmMpm_SRCS}")

set (EMMPM_COMMON_QT_SRCS
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/AboutBox.cpp
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/QRecentFileList.cpp
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/QR3DFileCompleter.cpp
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/AIMImageGraphicsDelegate.cpp
)
set (EMMPM_COMMON_QT_HDRS
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/AboutBox.h
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/QRecentFileList.h
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/QR3DFileCompleter.h
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/AIMImageGraphicsDelegate.h    )
IDE_SOURCE_PROPERTIES("EmMpm/Common/Qt" "${EMMPM_COMMON_QT_HDRS}" "${EMMPM_COMMON_QT_SRCS}")

set (EMMPM_COMMON_SRCS
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/AIMImage.cpp
)
set (EMMPM_COMMON_HDRS
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/AIMArray.hpp
    ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/AIMImage.h   )
IDE_SOURCE_PROPERTIES("EmMpm/Common" "${EMMPM_COMMON_HDRS}" "${EMMPM_COMMON_SRCS}")

# List the source files here
SET (Encoder_SRCS

)

set (Encoder_HDRS 

)
IDE_SOURCE_PROPERTIES("EmMpm/Encoder" "${Encoder_HDRS}" "${Encoder_SRCS}")

# --------------------------------------------------------------------
#  Get a list of the header to run 'moc' on 
# --------------------------------------------------------------------                   
SET( QEmMpm_MOC_HDRS
    ${QEmMpm_HDRS}
    ${EMMPM_COMMON_QT_HDRS}
)

# --------------------------------------------------------------------
# The UI files As generated by Qt Designer
# --------------------------------------------------------------------
SET( QEmMpm_UIS
  ${QEmMpm_SOURCE_DIR}/UI_Files/QEmMpm.ui
  ${EmMpmGUI_SOURCE_DIR}/Source/EmMpm/Common/Qt/UI_Files/AboutBox.ui
)

# and finally any resource files
SET( QEmMpm_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# --------------------------------------------------------------------
# -- Run MOC and UIC on the necessary files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${QEmMpm_RCS} )

# --------------------------------------------------------------------
# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${QEmMpm_UIS} )

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${QEmMpm_MOC_HDRS} )

# --------------------------------------------------------------------
#-- Put the generated files into their own group for IDEs
IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}")

# --------------------------------------------------------------------
# -- Finally set the Project Sources to include all the sources
SET (QEmMpm_PROJECT_SRCS 
    ${QEmMpm_SRCS}
    ${QEmMpm_HDRS}
    ${EMMPM_COMMON_QT_HDRS}
    ${EMMPM_COMMON_QT_SRCS}
    ${EMMPM_COMMON_HDRS}
    ${EMMPM_COMMON_SRCS}
    ${Encoder_SRCS}
    ${Encoder_HDRS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
)

include_directories( ${EmMpmGUI_SOURCE_DIR}/Source )
include_directories( ${QEmMpm_BINARY_DIR} )
#-- Set up OS X Application Bundle properties
#-- This file have tools for OS X Bunlde creation and configuration
INCLUDE (${EmMpmGUI_SOURCE_DIR}/Resources/OSX_Tools/OSX_BundleTools.cmake)

IF(APPLE)
 SET(GUI_TYPE MACOSX_BUNDLE)
 ConfigureMacOSXBundlePlist(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} 
                            ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns
                            ${EmMpmGUI_VERSION} )
ENDIF (APPLE)

IF(Q_WS_WIN)
    include_directories(${PROJECT_RESOURCES_DIR}/icons/ico)
    configure_file(${PROJECT_RESOURCES_DIR}/icons/ico/IconResource.rc.in ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc)
    SET (${PROJECT_NAME}_PROJECT_SRCS ${${PROJECT_NAME}_PROJECT_SRCS} ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc) 
    IDE_SOURCE_PROPERTIES ("ConfiguredFiles" "${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc" "")
ENDIF(Q_WS_WIN)

IDE_SOURCE_PROPERTIES ("ConfiguredFiles" "${QEmMpm_BINARY_DIR}/EmMpm/Common/EmMpmVersion.h" "")  

# ---------- Build the Viewer Application  ----------------------
ADD_EXECUTABLE( ${PROJECT_NAME} ${GUI_TYPE} ${QEmMpm_PROJECT_SRCS} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
                        ${QT_LIBRARIES})

FindQtPlugins("qgif;qjpeg;qtiff")

InstallationSupport(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} ${QEmMpm_BINARY_DIR})                

