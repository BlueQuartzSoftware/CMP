 # <distribution-statement>
 # #############################################################################
 # Distribution authorized to DOD components and DOD contractors only;         #
 # Administrative or Operational Use;                                          #
 # February 2009.                                                              #
 # Other requests for this document shall be referred to                       #
 # U.S. Air Force Research Laboratory                                          #
 # 2230 Tenth St., Ste. 1                                                      #
 # Wright-Patterson AFB, OH 45433-7817                                         #
 #                                                                             #
 # Destroy by contents or reconstruction of the document.                      #
 #                                                                             #
 # This code was written under the U.S. Air Force contrct F33615-03-C-5220     #
 # #############################################################################
 # </distribution-statement> 
PROJECT( QCrossCorrelation )
cmake_minimum_required(VERSION 2.6)

# ---------- Setup output Directories -------------------------
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Libraries"
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all Executables."
  )

# --------- Setup the Executable output Directory -------------
SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY
  ${PROJECT_BINARY_DIR}/Bin
  CACHE PATH
  "Single Directory for all static libraries."
  )

# --------------------------------------------------------------------
# Find the ITK Package
# --------------------------------------------------------------------
FIND_PACKAGE(ITK)
IF(ITK_FOUND)
  INCLUDE(${USE_ITK_FILE})
ELSE(ITK_FOUND)
  MESSAGE(FATAL_ERROR "Cannot build without ITK.  Please set ITK_DIR.")
ENDIF(ITK_FOUND)

# Set the GUI type for different platforms
SET(GUI_TYPE )

# Set some Win32 Specific Settings
IF(WIN32)
 SET(GUI_TYPE WIN32)
ENDIF(WIN32)

# Set some include directories
include_directories( ${TO79_SOURCE_DIR}/Source )
include_directories( ${TO79_SOURCE_DIR}/Source/MXA/Qt )
include_directories( ${QCrossCorrelation_BINARY_DIR} )

#-- Get the current set of source files
SET( QCrossCorrelation_SRCS
    ${QCrossCorrelation_SOURCE_DIR}/main.cpp
    ${QCrossCorrelation_SOURCE_DIR}/QCrossCorrelation.cpp
    ${QCrossCorrelation_SOURCE_DIR}/CrossCorrelationTask.cpp
)

SET (QCrossCorrelation_HDRS
    ${QCrossCorrelation_SOURCE_DIR}/QCrossCorrelation.h
    ${QCrossCorrelation_SOURCE_DIR}/CrossCorrelationTask.h
)
IDE_SOURCE_PROPERTIES( "CrossCorrelation/GUI" "${QCrossCorrelation_HDRS}" "${QCrossCorrelation_SRCS}")

#-- Get the current set of source files
SET( CrossCorrelation_SRCS
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/CrossCorrelation.cpp
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/CrossCorrelationData.cpp
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/ImageFilters/R3DImageFilter.cpp
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/ImageFilters/R3DCropGrayScaleImage.cpp
)

SET (CrossCorrelation_HDRS
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/CrossCorrelation.h
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/CrossCorrelationData.h
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/ImageFilters/R3DImageFilter.h
    ${TO79_SOURCE_DIR}/Source/CrossCorrelation/ImageFilters/R3DCropGrayScaleImage.h
)
IDE_SOURCE_PROPERTIES( "CrossCorrelation/GUI" "${QCrossCorrelation_HDRS}" "${QCrossCorrelation_SRCS}")


# --------------------------------------------------------------------
# include this so the source files can have moc and uic run on them
include(${TO79_SOURCE_DIR}/Source/MXA/Qt/Qt_SourceList.cmake)

# --------------------------------------------------------------------
#  Get a list of the header to run 'moc' on 
# --------------------------------------------------------------------                   
SET( QCrossCorrelation_MOC_HDRS
    ${QCrossCorrelation_HDRS}
    ${MXA_QT_HDRS}
)

# --------------------------------------------------------------------
# The UI files As generated by Qt Designer
# --------------------------------------------------------------------
SET( QCrossCorrelation_UIS
  ${QCrossCorrelation_SOURCE_DIR}/UI_Files/QCrossCorrelation.ui
  ${MXA_QT_UI_FILES}
)

# and finally any resource files
SET( QCrossCorrelation_RCS ${PROJECT_RESOURCES_DIR}/icons/images/Icons.qrc)

# --------------------------------------------------------------------
# Run MOC on the files   
QT4_ADD_RESOURCES( Generated_RC_SRCS ${QCrossCorrelation_RCS} )

# --------------------------------------------------------------------
# this will run uic on .ui files:
QT4_WRAP_UI( Generated_UI_HDRS ${QCrossCorrelation_UIS} )

# --------------------------------------------------------------------
# and finally this will run moc:
QT4_WRAP_CPP( Generated_MOC_SRCS ${QCrossCorrelation_MOC_HDRS} )

# --------------------------------------------------------------------
#-- Put the generated files into their own group for IDEs
IDE_SOURCE_PROPERTIES( "Generated" "${Generated_UI_HDRS}" "${Generated_MOC_SRCS};${Generated_RC_SRCS}")

include(${TO79_SOURCE_DIR}/Source/AIM/Common/Common_SourceList.cmake)
include(${TO79_SOURCE_DIR}/Source/MXA/Common/Common_SourceList.cmake)
include(${TO79_SOURCE_DIR}/Source/MXA/Utilities/Utilities_SourceList.cmake)

# --------------------------------------------------------------------
# -- Finally set the Project Sources to include all the sources
SET (QCrossCorrelation_PROJECT_SRCS 
    ${QCrossCorrelation_SRCS}
    ${QCrossCorrelation_HDRS}
    ${CrossCorrelation_SRCS}
    ${CrossCorrelation_HDRS}
    ${AIM_COMMON_HDRS}
    ${AIM_COMMON_SRCS}
    ${Generated_RC_SRCS} 
    ${Generated_UI_HDRS} 
    ${Generated_MOC_SRCS}
    ${MXA_COMMON_SRCS}
    ${MXA_COMMON_HEADERS}
    ${MXA_QT_HDRS}
    ${MXA_QT_SRCS}
    ${MXA_UTILITIES_SRCS}
    ${MXA_UTILITIES_HDRS}
)


#-- Set up OS X Application Bundle properties
#-- This file have tools for OS X Bunlde creation and configuration
INCLUDE (${PROJECT_RESOURCES_DIR}/OSX_Tools/OSX_BundleTools.cmake)

IF(APPLE)
 SET(GUI_TYPE MACOSX_BUNDLE)
 ConfigureMacOSXBundlePlist(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} 
                            ${PROJECT_RESOURCES_DIR}/icons/icns/${PROJECT_NAME}.icns
                            ${TO79_VERSION} )
ENDIF (APPLE)

IF(Q_WS_WIN)
    include_directories(${PROJECT_RESOURCES_DIR}/icons/ico)
    configure_file(${PROJECT_RESOURCES_DIR}/icons/ico/IconResource.rc.in ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc)
    SET (${PROJECT_NAME}_PROJECT_SRCS ${${PROJECT_NAME}_PROJECT_SRCS} ${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc) 
    IDE_SOURCE_PROPERTIES ("CrossCorrelation/ConfiguredFiles" "${${PROJECT_NAME}_BINARY_DIR}/${PROJECT_NAME}.rc" "")
    IDE_SOURCE_PROPERTIES( "CrossCorrelation/Configured" "${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Version.h;${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Configuration.h" "${TO79_BINARY_DIR}/${PROJECT_PREFIX}/Common/${PROJECT_PREFIX}Types.h")                
ENDIF(Q_WS_WIN)

# ---------- Build the Viewer Application  ----------------------
ADD_EXECUTABLE( ${PROJECT_NAME} ${GUI_TYPE} ${QCrossCorrelation_PROJECT_SRCS} )
TARGET_LINK_LIBRARIES( ${PROJECT_NAME}
                        ${QT_LIBRARIES}
                        ${ITK_LIBRARIES})

FindQtPlugins("qgif;qjpeg;qtiff")

InstallationSupport(${PROJECT_NAME} ${EXE_DEBUG_EXTENSION} ${QCrossCorrelation_BINARY_DIR})                
